[["index.html", "Sticky Pi, a high-frequency smart insect trap to study daily activity in the field Introduction", " Sticky Pi, a high-frequency smart insect trap to study daily activity in the field Quentin Geissmann 2021-01-25 Introduction This is the reference documentation for the Sticky Pi project. It describes the different parts of the projects, how to build, deploy and use the various resources. The principle behind Sticky Pis Sticky Pis are smart sticky traps using a Raspberry Pi camera to automatically score when, which and where insects were captured (using modern AI tools). They take very frequent pictures (three per hour), which reveals much more information compared to traditional traps (such as insects' response to weather fluctuations and effect of the time of the day). Sticky Pis integrate into a scalable platform, where individual devices send their data to a centralised web-server. A single team can deploy multiple devices and compile large ecological datasets. The Sticky Pi project is a community open-source academic resource. They are affordable and can be easily adapted for research, teaching and applied for work. If you use Sticky Pis in your research, please cite our publication. "],["overview.html", "Platform Overview", " Platform Overview The Sticky Pi project contains several interconnected tools. A github organisation features the material (source code, data, CAD files, ...) for each individual tool. Here is a list of all the tools: Name Description sticky-pi-device The Hardware and software for the Sticky Pi cameras (i.e. device) sticky-pi-device-v2 The improved version of the smart traps (in development) sticky-pi-api Server and client api and the docker services for the server webapps sticky-pi-ml Machine learning for the Sticky Pi project sticky-pi-manuscript Manuscipt material and experiments for the 2021 method publication sticky-pi.github.io Source code of this documentation TODO include image here: platform. a clickable svg would be great This is an overview of the main components of the platform. The details of each part will be explain further. Hardware Sticky Pi devices -- Takes pictures of traps and record environmental conditions Data harvester -- Manage devices and retrieve their data (in the field) Web server Database -- Store image metadata as well as, processing results, users... S3 server -- Store and serve image data and ML models API -- Parses client requests to put/get resources from the underlying database Webapp -- a frontend website to visualise/plot the images taken and processing results Nginx server -- secure and rout connections between above services and to the outside world Analysis pipeline -- pre-process images in real time Machine Learning Universal Insect Detector -- Detect insect vs background, in all images Siamese Insect Matcher -- Track insect instances across imaged Insect Tuboid Classifier -- Predict insect taxonomy from a tracked instance "],["hardware.html", "Hardware Device Data harvester", " Hardware This page describes and explains how to build the two main components of the hardware: the Sticky Pi device and the Data harvester. Briefly, multiple Sticky Pis are deployed in the field. Each device stores its images on its own SD card. On a regular basis (e.g. weekly), experimenters use a data harvester to retrieve the data from multiple devices. Silently, the data harvester also sync the location and time of the devices it communicates with. One data harvester may be used to maintain multiple traps. Multiple data harvesters can exist in the same platform (e.g. five experimenters, one harvester per experimenter, ten devices per experimenter). This section involve familiarity with 3D printing, electronics, DIY, ... We are working on streamlining the assembly process towards a more off-the-shelf tool, but are generally happy to collaborate and help building devices --do not hesitate to contact us. Device Data harvester "],["web-server.html", "Web Server", " Web Server todo "],["ml.html", "Machine Learning", " Machine Learning todo "],["community.html", "Issues and community Citation Having troubles Contributing Contact", " Issues and community Citation Sticky Pis are a research tool. As such, they are -- and will always be -- as free and open-source as possible. If you use Sticky Pis as part of your research, please cite our reference publication. Having troubles If you are having issues or you want help with something, the best thing you can do is fill an &quot;issue&quot; on the github repository of the relevant tool. Contributing We welcome external contributions and hope Sticky Pis develops as part of a computational entomology community. There are several ways you can contribute: By requesting features and reporting bugs through the github issue system By sending pull requests to preexisting tools By volunteering to maintain/develop a tools Contact Sticky Pis are developed at the [Plant-Insect Ecology and Evolution lab] at UBC, Vancouver(https://lfs-carrillo.sites.olt.ubc.ca/) in collaboration with the Haney Lab and the todo. Do not hesitate to contact Quentin Geissmann, the main contributor of the project for inquiries. main contributor "]]
